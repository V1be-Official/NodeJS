{"version":3,"sources":["components/modals/AuthModals/AuthModals.module.scss","utils/classNames.ts","components/ui/Screen/Screen.tsx","components/ui/Button/Button.tsx","utils/changeDocumentTitle.ts","utils/getValuesFromSubmitEvent.ts","components/routes.ts","api/auth.api.ts","api/api.ts","store/reducers/auth.reducer.ts","thunks/refreshTokenThunk.ts","components/modals/AuthModals/LoginModal/LoginModal.tsx","components/modals/AuthModals/RegistationModal/utils/validateFields.ts","components/modals/AuthModals/RegistationModal/RegistrationModal.tsx","components/pages/AuthPage/AuthPage.tsx","components/pages/NotFoundPage.tsx","components/lists/FilesList/FilesList.tsx","store/reducers/index.ts","store/Store.ts","thunks/loadFilesThunk.ts","components/ui/UploadFileButton/UploadFileButton.tsx","components/pages/MainPage/MainPage.tsx","components/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/lists/FilesList/FilesList.module.scss","components/pages/MainPage/MainPage.module.scss","components/ui/UploadFileButton/UploadFileButton.module.scss","components/ui/Button/Button.module.scss","components/ui/Screen/Screen.module.scss","components/pages/AuthPage/AuthPage.module.scss"],"names":["module","exports","_classNames","Screen","className","children","style","classNames","styles","screen","Button","as","As","theme","props","button","changeDocumentTitle","value","document","title","getValuesFromSubmitEvent","event","currentTarget","formData","FormData","result","Array","from","entries","forEach","key","toString","routes","api","axios","create","baseURL","Requests","Types","data","post","responseType","headers","AuthApi","token","Actions","createAction","createReducer","Auth","InitialState","saveToken","type","state","payload","removeToken","refreshTokenThunk","dispatch","a","refreshToken","refreshedToken","localStorage","setItem","LoginModal","useState","isLoading","setIsLoading","history","useHistory","useDispatch","onSubmit","persist","preventDefault","values","login","push","console","error","modalStyle","useMemo","userSelect","pointerEvents","useEffect","savedTitle","Global","defaultTitle","modalStyles","modal","form","noValidate","autoSave","inputContainer","input","usernameInput","name","placeholder","passwordInput","row","spaceBetween","actions","to","link","toRegistration","successButton","submitButton","disabled","size","color","loading","css","validateFields","errors","Object","repeatPassword","field","password","length","validatePassword","test","validateUsername","username","validateEmail","email","RegistrationModal","setErrors","validated","keys","register","onChange","target","newErrors","fieldError","emailInput","repeatPasswordInput","toLogin","AuthPage","container","path","component","exact","NotFoundPage","FilesList","mainTitle","list","map","fileData","filename","mainRow","onClick","onRowClick","timestamp","Date","toLocaleString","comment","rootReducer","combineReducers","auth","Reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","ReduxThunk","loadFilesThunk","getState","getListFiles","response","code","message","UploadFileButton","onUploadFiles","attachedFile","label","files","attachedFileName","MainPage","useSelector","isFilesListLoading","setIsFilesListLoading","$isFilesLoaded","useRef","filesList","setFilesList","commentValue","setCommentValue","setAttachedFile","timer","setError","showError","errorMessage","clearTimeout","setTimeout","getFilesList","useCallback","current","onSelectFile","downloadFile","file","createElement","download","reader","FileReader","readAsDataURL","onload","href","click","errorInfo","fileList","onSendFile","append","uploadFile","sessionToken","getItem","checkSession","then","catch","removeItem","commentField","sendFileButton","Router","render","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebba273b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthModals_container__1EDxK\",\"showContainer\":\"AuthModals_showContainer__2P2N-\",\"modal\":\"AuthModals_modal__4r_g-\",\"showModal\":\"AuthModals_showModal__3eKTe\",\"successButton\":\"AuthModals_successButton__5H0dZ\",\"title\":\"AuthModals_title__3A93F\",\"form\":\"AuthModals_form__2AVwl\",\"inputContainer\":\"AuthModals_inputContainer__2A6P9\",\"fieldError\":\"AuthModals_fieldError__83fDE\",\"input\":\"AuthModals_input__3eccc\",\"actions\":\"AuthModals_actions__235SL\",\"link\":\"AuthModals_link__3feHK\",\"row\":\"AuthModals_row__25BwT\",\"spaceBetween\":\"AuthModals_spaceBetween__3NHYI\"};","import _classNames from 'classnames';\r\n\r\nexport default _classNames;\r\n","import React, {CSSProperties} from 'react';\r\nimport classNames from '../../../utils/classNames';\r\n\r\nimport styles from './Screen.module.scss';\r\n\r\ninterface Props {\r\n    className?: string,\r\n    style?: CSSProperties\r\n}\r\n\r\nexport const Screen: React.FC<Props> = ({className, children, style}) => {\r\n    return (\r\n        <div\r\n            className={classNames(className, styles.screen)}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport classNames from '../../../utils/classNames';\r\nimport styles from './Button.module.scss';\r\n\r\ninterface Props {\r\n    theme?: \"success\",\r\n    as?: React.ElementType\r\n}\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<any>, Props {}\r\n\r\ninterface LabelButtonProps extends React.LabelHTMLAttributes<any>, Props {}\r\n\r\ntype Main = ButtonProps | LabelButtonProps;\r\n\r\nexport const Button: React.FC<Main> = ({as: As = \"button\", theme = \"success\", ...props}) =>\r\n    (<As {...props} className={classNames(styles.button, styles[theme], props.className)} />);\r\n","export const changeDocumentTitle = (value: string) => {\r\n    document.title = value;\r\n};\r\n","import React from 'react';\r\n\r\ntype ResultType = { [key: string]: string };\r\n\r\nexport function getValuesFromSubmitEvent<ValuesTypes>(event: React.FormEvent<HTMLFormElement>) {\r\n    const {currentTarget} = event;\r\n\r\n    const formData = new FormData(currentTarget);\r\n\r\n    const result: ResultType = {};\r\n\r\n    Array.from(formData.entries()).forEach(([key, value]) => {\r\n        result[key] = value.toString();\r\n    });\r\n\r\n    return (result as unknown as ValuesTypes);\r\n}\r\n","export const routes = {\r\n    root: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    notFound: \"/404\"\r\n};\r\n","import {api} from \"./api\";\r\n\r\ntype Token = string;\r\n\r\nexport namespace AuthApi {\r\n\r\n    export namespace Types {\r\n        export namespace Requests {\r\n            export interface Register {\r\n                username: string,\r\n                password: string,\r\n                email: string\r\n            }\r\n\r\n            export interface RefreshToken {\r\n                token: Token\r\n            }\r\n\r\n            export interface Login {\r\n                username: string,\r\n                password: string\r\n            }\r\n\r\n            export interface GetUserData {\r\n                token: Token\r\n            }\r\n\r\n            export interface CheckSession {\r\n                token: Token\r\n            }\r\n\r\n            export interface GetListFiles {\r\n                token: Token\r\n            }\r\n\r\n            export interface DownloadFile {\r\n                token: Token,\r\n                filename: string\r\n            }\r\n\r\n            export type UploadFile = FormData;\r\n        }\r\n    }\r\n\r\n    export function refreshToken(data: AuthApi.Types.Requests.RefreshToken) {\r\n        return api.post(\"/refreshToken\", data);\r\n    }\r\n\r\n    export function register(data: AuthApi.Types.Requests.Register) {\r\n        return api.post(\"/register\", data);\r\n    }\r\n\r\n    export function login(data: AuthApi.Types.Requests.Login) {\r\n        return api.post(\"/login\", data);\r\n    }\r\n\r\n    export function getUserData(data: AuthApi.Types.Requests.GetUserData) {\r\n        return api.post(\"/getUserData\", data);\r\n    }\r\n\r\n    export function checkSession(data: AuthApi.Types.Requests.CheckSession) {\r\n        return api.post(\"/checkSession\", data);\r\n    }\r\n\r\n    export function getListFiles(data: AuthApi.Types.Requests.GetListFiles) {\r\n        return api.post(\"/getListFiles\", data);\r\n    }\r\n\r\n    export function downloadFile(data: AuthApi.Types.Requests.DownloadFile) {\r\n        return api.post(\"/downloadFile\", data, {\r\n            responseType: \"blob\"\r\n        });\r\n    }\r\n\r\n    export function uploadFile(data: AuthApi.Types.Requests.UploadFile) {\r\n        return api.post(\"/uploadFile\", data, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst baseURL = process.env.NODE_ENV === \"development\" ? \"http://localhost:21039/api\" : \"http://46.101.182.162/api\";\r\n\r\nexport interface ApiError {\r\n    code: string | null,\r\n    message: string | null\r\n}\r\n\r\nexport const api = axios.create({\r\n    baseURL\r\n});\r\n","import {createAction, createReducer} from \"@reduxjs/toolkit\";\r\n\r\nexport namespace Auth {\r\n    export namespace Types {\r\n        export type Token = string | null;\r\n\r\n        export interface State {\r\n            token: Token\r\n        }\r\n    }\r\n\r\n    export const InitialState:Auth.Types.State = {\r\n        token: null\r\n    };\r\n\r\n    export namespace Actions {\r\n        export const saveToken = createAction<Auth.Types.Token>(\"Save authentication token\");\r\n\r\n        export const removeToken = createAction(\"Delete authentication token\");\r\n    }\r\n\r\n    export const Reducer = createReducer(Auth.InitialState, {\r\n        [Auth.Actions.saveToken.type]: (state, {payload}: {payload: Auth.Types.Token}) => {\r\n            state.token = payload;\r\n        },\r\n        [Auth.Actions.removeToken.type]: (state) => {\r\n            state.token = Auth.InitialState.token;\r\n        }\r\n    });\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport { Auth } from \"../store/reducers/auth.reducer\";\r\nimport {AuthApi} from \"../api/auth.api\";\r\n\r\nexport const refreshTokenThunk = (token: Auth.Types.Token) => async (dispatch: Dispatch) => {\r\n    if(token) {\r\n        const {data: refreshedToken} = await AuthApi.refreshToken({token});\r\n\r\n        dispatch(Auth.Actions.saveToken(refreshedToken));\r\n        localStorage.setItem(\"sessionToken\", refreshedToken);\r\n\r\n        return refreshedToken;\r\n    }\r\n};\r\n","import React, {CSSProperties, useEffect, useMemo, useState} from 'react';\r\n\r\nimport modalStyles from '../AuthModals.module.scss';\r\n\r\nimport styles from './LoginModal.module.scss';\r\nimport classNames from \"classnames\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {Button} from \"../../../ui/Button/Button\";\r\nimport {ClipLoader} from \"react-spinners\";\r\nimport {css} from \"@emotion/core\";\r\nimport {Global} from \"../../../../App\";\r\nimport {changeDocumentTitle} from '../../../../utils/changeDocumentTitle';\r\nimport {getValuesFromSubmitEvent} from \"../../../../utils/getValuesFromSubmitEvent\";\r\nimport {routes} from \"../../../routes\";\r\nimport {AuthApi} from \"../../../../api/auth.api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {refreshTokenThunk} from \"../../../../thunks/refreshTokenThunk\";\r\n\r\nexport const LoginModal: React.FC = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.persist();\r\n        event.preventDefault();\r\n\r\n        try {\r\n            setIsLoading(true);\r\n\r\n            const values = getValuesFromSubmitEvent<AuthApi.Types.Requests.Login>(event);\r\n\r\n            const {data: token} = await AuthApi.login(values);\r\n\r\n            const refreshedToken = await dispatch(refreshTokenThunk(token)) as unknown as string;\r\n\r\n            localStorage.setItem(\"sessionToken\", refreshedToken);\r\n\r\n            history.push(routes.root);\r\n\r\n            return;\r\n\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const modalStyle = useMemo(() => {\r\n        if (isLoading) {\r\n            return {\r\n                userSelect: \"none\",\r\n                pointerEvents: \"none\"\r\n            } as CSSProperties;\r\n        }\r\n\r\n        return {};\r\n    }, [isLoading]);\r\n\r\n    useEffect(() => {\r\n        const savedTitle = document.title;\r\n\r\n        changeDocumentTitle(Global.defaultTitle + \" - Авторизация\");\r\n\r\n        return () => {\r\n            changeDocumentTitle(savedTitle);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={modalStyles.modal}\r\n            style={modalStyle}\r\n        >\r\n            <h3 className={modalStyles.title}>Авторизация</h3>\r\n            <form\r\n                className={modalStyles.form}\r\n                noValidate={true}\r\n                onSubmit={onSubmit}\r\n                autoSave={\"true\"}\r\n            >\r\n                <div className={modalStyles.inputContainer}>\r\n                    <input\r\n                        className={classNames(modalStyles.input, styles.usernameInput)}\r\n                        type={\"text\"}\r\n                        name={\"username\"}\r\n                        placeholder={\"Логин\"}\r\n                    />\r\n                </div>\r\n                <div className={modalStyles.inputContainer}>\r\n                    <input\r\n                        className={classNames(modalStyles.input, styles.passwordInput)}\r\n                        type={\"password\"}\r\n                        name={\"password\"}\r\n                        placeholder={\"Пароль\"}\r\n                    />\r\n                </div>\r\n                <div className={classNames(modalStyles.row, modalStyles.spaceBetween, modalStyles.actions)}>\r\n                    <Link\r\n                        to={\"/registration\"}\r\n                        className={classNames(modalStyles.link, styles.toRegistration)}\r\n                    >\r\n                        Нет аккаунта?\r\n                    </Link>\r\n                    <Button\r\n                        className={classNames(modalStyles.successButton, styles.submitButton)}\r\n                        disabled={isLoading}\r\n                    >\r\n                        Войти\r\n                        <ClipLoader\r\n                            size={14}\r\n                            color={\"#ffffff\"}\r\n                            loading={isLoading}\r\n                            css={css`\r\n                              margin-left: 10px;\r\n                            `\r\n                            }\r\n                        />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","const validateEmail = (value:string) => /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/.test(value);\r\n\r\nconst validateUsername = (value:string) => /^[a-zA-Z1-9]+$/.test(value) && value.length > 4;\r\n\r\nconst validatePassword = (value: string) => value.length > 6;\r\n\r\nconst validateRepeatPassword = (repeatPassword:string | undefined, password:string | undefined) => password === repeatPassword;\r\n\r\nexport interface IError {\r\n    data: string\r\n}\r\n\r\nexport interface IRegistrationFields<T> {\r\n    repeatPassword?: T,\r\n    password?: T,\r\n    username?: T,\r\n    email?: T\r\n}\r\n\r\nexport type Errors = IRegistrationFields<IError>;\r\nexport type Values = IRegistrationFields<string>;\r\n\r\nexport const validateFields = (values: Values):Errors => {\r\n    const errors:Errors = {\r\n    };\r\n\r\n    Object.entries(values).forEach(([field, value]) => {\r\n        switch (field) {\r\n            case \"repeatPassword\":\r\n                if(!validateRepeatPassword(value, values.password)) {\r\n                    errors.repeatPassword = {data: \"Пароли не соответствуют\"};\r\n                }\r\n                break;\r\n            case \"password\":\r\n                if(!validatePassword(value)) {\r\n                    errors.password = {data: \"Пароль не соответствует требованиям\"};\r\n                }\r\n                break;\r\n            case \"username\":\r\n                if(!validateUsername(value)) {\r\n                    errors.username = {data: \"Логин не соответствует требованиям\"};\r\n                }\r\n                break;\r\n            case \"email\":\r\n                if(!validateEmail(value)) {\r\n                    errors.email = {data: \"Неправильный формат почты\"};\r\n                }\r\n\r\n                break;\r\n        }\r\n    })\r\n\r\n    return errors;\r\n};\r\n","import React, {CSSProperties, useEffect, useMemo, useState} from 'react';\r\n\r\nimport modalStyles from '../AuthModals.module.scss';\r\n\r\nimport styles from './RegistrationModal.module.scss';\r\nimport classNames from \"classnames\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {Button} from \"../../../ui/Button/Button\";\r\nimport {ClipLoader} from \"react-spinners\";\r\nimport {css} from \"@emotion/core\";\r\nimport {IError, IRegistrationFields, validateFields} from \"./utils/validateFields\";\r\nimport {getValuesFromSubmitEvent} from '../../../../utils/getValuesFromSubmitEvent';\r\nimport {Global} from \"../../../../App\";\r\nimport {changeDocumentTitle} from \"../../../../utils/changeDocumentTitle\";\r\nimport {AuthApi} from \"../../../../api/auth.api\";\r\nimport {routes} from \"../../../routes\";\r\n\r\nexport const RegistrationModal: React.FC = (props) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [errors, setErrors] = useState<IRegistrationFields<IError>>({});\r\n\r\n    const history = useHistory();\r\n\r\n    const onChange = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n        const {name} = event.target;\r\n\r\n        if(errors[name as keyof IRegistrationFields<IError>]) {\r\n            const newErrors = {...errors};\r\n\r\n            delete newErrors[name as keyof IRegistrationFields<IError>];\r\n\r\n            setErrors(newErrors)\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event: React.SyntheticEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        const values = getValuesFromSubmitEvent<AuthApi.Types.Requests.Register>(event);\r\n\r\n        const validated = validateFields(values);\r\n\r\n        if(Object.keys(validated).length > 0) {\r\n            setErrors(validated);\r\n        }\r\n        else {\r\n            try {\r\n                setIsLoading(true);\r\n\r\n                await AuthApi.register({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                    email: values.email\r\n                });\r\n\r\n                history.push(routes.login);\r\n\r\n                setIsLoading(false);\r\n            }\r\n            catch (error) {\r\n                console.error(error);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const modalStyle = useMemo(() => {\r\n        if (isLoading) {\r\n            return {\r\n                userSelect: \"none\",\r\n                pointerEvents: \"none\"\r\n            } as CSSProperties;\r\n        }\r\n\r\n        return {};\r\n    }, [isLoading]);\r\n\r\n    useEffect(() => {\r\n        const savedTitle = document.title;\r\n\r\n        changeDocumentTitle(Global.defaultTitle + \" - Регистрация\");\r\n\r\n        return () => {\r\n            changeDocumentTitle(savedTitle);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={modalStyles.modal}\r\n            style={modalStyle}\r\n        >\r\n            <h3 className={modalStyles.title}>Регистрация</h3>\r\n            <form className={modalStyles.form} onSubmit={onSubmit} noValidate={true} onChange={onChange}>\r\n                <div className={modalStyles.inputContainer}>\r\n                    {\r\n                        errors.email && (\r\n                            <span className={modalStyles.fieldError}>\r\n                                {errors.email.data}\r\n                            </span>\r\n                        )\r\n                    }\r\n                    <input\r\n                        className={classNames(modalStyles.input, styles.emailInput)}\r\n                        type={\"text\"}\r\n                        name={\"email\"}\r\n                        placeholder={\"Почта: example@mail.com\"}\r\n                    />\r\n                </div>\r\n                <div className={modalStyles.inputContainer}>\r\n                    {\r\n                        errors.username && (\r\n                            <span className={modalStyles.fieldError}>\r\n                                {errors.username.data}\r\n                            </span>\r\n                        )\r\n                    }\r\n                    <input\r\n                        className={classNames(modalStyles.input, styles.usernameInput)}\r\n                        type={\"text\"}\r\n                        name={\"username\"}\r\n                        placeholder={\"Логин\"}\r\n                    />\r\n                </div>\r\n                <div className={modalStyles.inputContainer}>\r\n                    {\r\n                        errors.password && (\r\n                            <span className={modalStyles.fieldError}>\r\n                                {errors.password.data}\r\n                            </span>\r\n                        )\r\n                    }\r\n                    <input\r\n                        className={classNames(modalStyles.input, styles.passwordInput)}\r\n                        type={\"password\"}\r\n                        name={\"password\"}\r\n                        placeholder={\"Пароль\"}\r\n                    />\r\n                </div>\r\n                <div className={modalStyles.inputContainer}>\r\n                    {\r\n                        errors.repeatPassword && (\r\n                            <span className={modalStyles.fieldError}>\r\n                                {errors.repeatPassword.data}\r\n                            </span>\r\n                        )\r\n                    }\r\n                    <input\r\n                        className={classNames(modalStyles.input, styles.repeatPasswordInput)}\r\n                        type={\"password\"}\r\n                        name={\"repeatPassword\"}\r\n                        placeholder={\"Повторите пароль\"}\r\n                    />\r\n                </div>\r\n                <div className={classNames(modalStyles.row, modalStyles.spaceBetween, modalStyles.actions)}>\r\n                    <Link\r\n                        to={\"/login\"}\r\n                        className={classNames(modalStyles.link, styles.toLogin)}\r\n                    >\r\n                        Уже есть аккаунт?\r\n                    </Link>\r\n                    <Button\r\n                        className={classNames(modalStyles.successButton, styles.submitButton)}\r\n                        disabled={isLoading}\r\n                    >\r\n                        Зарегистрироваться\r\n                        <ClipLoader\r\n                            size={14}\r\n                            color={\"#ffffff\"}\r\n                            loading={isLoading}\r\n                            css={css`\r\n                              margin-left: 10px;\r\n                            `\r\n                            }\r\n                        />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {Screen} from \"../../ui/Screen/Screen\";\r\n\r\nimport styles from './AuthPage.module.scss';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {LoginModal} from \"../../modals/AuthModals/LoginModal/LoginModal\";\r\nimport {RegistrationModal} from \"../../modals/AuthModals/RegistationModal/RegistrationModal\";\r\nimport {routes} from \"../../routes\";\r\n\r\n\r\nconst AuthPage: React.FC = props => {\r\n\r\n    return (\r\n        <Screen\r\n            className={styles.container}\r\n        >\r\n            <Switch>\r\n                <Route path={routes.login} component={LoginModal} exact={true} />\r\n                <Route path={routes.registration} component={RegistrationModal} exact={true} />\r\n            </Switch>\r\n        </Screen>\r\n    );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\nimport {Screen} from \"../ui/Screen/Screen\";\r\n\r\n\r\nconst NotFoundPage:React.FC = props => {\r\n    return (\r\n        <Screen>\r\n            404\r\n        </Screen>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\n\r\nimport styles from './FilesList.module.scss';\r\nimport {ClipLoader} from \"react-spinners\";\r\nimport {css} from \"@emotion/core\";\r\n\r\nexport interface FileRow {\r\n    filename: string,\r\n    comment: string,\r\n    timestamp: Date | number\r\n}\r\n\r\ninterface Props {\r\n    data: Array<FileRow>,\r\n    onRowClick: (data: FileRow) => void,\r\n    isLoading: boolean\r\n}\r\n\r\nexport const FilesList: React.FC<Props> = props => {\r\n\r\n    const onRowClick = (fileData: FileRow) => {\r\n        props.onRowClick(fileData);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.mainTitle}>Список файлов:</div>\r\n            {props.isLoading ? (\r\n                <ClipLoader\r\n                    size={25}\r\n                    color={\"#15FF73\"}\r\n                    loading={props.isLoading}\r\n                    css={css`\r\n                              margin-top: 10px;\r\n                            `\r\n                    }\r\n                />\r\n            ) : (\r\n                <div className={styles.list}>\r\n                    {props.data.map((fileData) => {\r\n                        return (\r\n                            <div key={fileData.filename} className={styles.mainRow}\r\n                                 onClick={() => onRowClick(fileData)}>\r\n                                <div className={styles.row}>\r\n                                    <span className={styles.filename}>{fileData.filename}</span>\r\n                                    <span\r\n                                        className={styles.timestamp}>{new Date(fileData.timestamp).toLocaleString()}</span>\r\n                                </div>\r\n\r\n                                <div className={styles.row}>\r\n                                    {fileData.comment && <span\r\n                                        className={styles.comment}>Комментарий: <br/><span>{fileData.comment}</span></span>}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import {combineReducers} from \"redux\";\r\nimport {Auth} from \"./auth.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: Auth.Reducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import {applyMiddleware, compose, createStore} from 'redux';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nfunction configureStore() {\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk)));\r\n}\r\n\r\nexport const Store = configureStore();\r\n\r\nexport type RootState = ReturnType<typeof Store.getState>\r\n","import {Dispatch} from \"redux\";\r\nimport { Store } from \"../store/Store\";\r\nimport {refreshTokenThunk} from \"./refreshTokenThunk\";\r\nimport {AuthApi} from \"../api/auth.api\";\r\n\r\nexport const loadFilesThunk = () => async (dispatch: Dispatch<any>, getState: typeof Store.getState) => {\r\n\r\n    const token = getState().auth.token;\r\n\r\n    if(token) {\r\n        try {\r\n            const response = await AuthApi.getListFiles({token});\r\n\r\n            return response.data;\r\n        }\r\n        catch (error) {\r\n\r\n            const {code, message}:{code: string, message: string} = error.response.data;\r\n\r\n            if(code === \"EXPIRATION_OUT\") {\r\n                await dispatch(refreshTokenThunk(token));\r\n                return dispatch(loadFilesThunk());\r\n            }\r\n            else {\r\n                console.error(message);\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\n\r\nimport styles from './UploadFileButton.module.scss';\r\nimport {Button} from \"../Button/Button\";\r\n\r\ninterface Props {\r\n    onUploadFiles: (fileList: FileList | null, event: React.ChangeEvent<HTMLInputElement>) => void,\r\n    attachedFile: File | null\r\n}\r\n\r\nexport const UploadFileButton:React.FC<Props> = ({onUploadFiles, attachedFile, children}) => {\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        onUploadFiles(event.currentTarget.files, event);\r\n        event.currentTarget.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Button\r\n                as={\"label\"}\r\n                className={styles.label}\r\n            >\r\n                {children}\r\n                <input\r\n                    type={\"file\"}\r\n                    onChange={onChange}\r\n                />\r\n            </Button>\r\n            {\r\n                attachedFile ? (\r\n                    <span className={styles.attachedFileName}>\r\n                        Прикреплённый файл: <span>{attachedFile.name}</span>\r\n                    </span>\r\n                ) : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport {FileRow, FilesList} from \"../../lists/FilesList/FilesList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Auth} from \"../../../store/reducers/auth.reducer\";\r\nimport {RootState, Store} from \"../../../store/Store\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {routes} from \"../../routes\";\r\nimport {loadFilesThunk} from \"../../../thunks/loadFilesThunk\";\r\nimport {AuthApi} from \"../../../api/auth.api\";\r\nimport {ApiError} from \"../../../api/api\";\r\nimport {refreshTokenThunk} from \"../../../thunks/refreshTokenThunk\";\r\nimport {UploadFileButton} from \"../../ui/UploadFileButton/UploadFileButton\";\r\nimport {Button} from \"../../ui/Button/Button\";\r\n\r\nimport styles from './MainPage.module.scss';\r\n\r\ninterface Props {\r\n}\r\n\r\nexport const MainPage: React.FC<Props> = props => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const token = useSelector<RootState, Auth.Types.Token>(state => state.auth.token);\r\n\r\n    const history = useHistory();\r\n\r\n    const [isFilesListLoading, setIsFilesListLoading] = useState<boolean>(false);\r\n\r\n    const $isFilesLoaded = useRef(false);\r\n\r\n    const [filesList, setFilesList] = useState<Array<FileRow>>([]);\r\n\r\n    const [commentValue, setCommentValue] = useState<string>(\"\");\r\n\r\n    const [attachedFile, setAttachedFile] = useState<null | File>(null);\r\n\r\n    const [error, setError] = useState<{value: string, timer: null | NodeJS.Timeout}>({\r\n        value: \"\",\r\n        timer: null\r\n    });\r\n\r\n    const showError = (errorMessage: string) => {\r\n        if(error.timer !== null) {\r\n            clearTimeout(error.timer);\r\n        }\r\n\r\n        setError({\r\n            value: errorMessage,\r\n            timer: setTimeout(() => {\r\n                setError({\r\n                    value: \"\",\r\n                    timer: null\r\n                });\r\n            }, 3000)\r\n        });\r\n    };\r\n\r\n    const getFilesList = useCallback(async () => {\r\n        if(token) {\r\n            setIsFilesListLoading(true);\r\n            const files = await dispatch(loadFilesThunk()) as unknown as Array<FileRow>;\r\n            setIsFilesListLoading(false);\r\n            setFilesList(files);\r\n            $isFilesLoaded.current = true;\r\n        }\r\n    }, [token, dispatch]);\r\n\r\n    const onSelectFile = async (fileData: FileRow) => {\r\n        try {\r\n            const response = await AuthApi.downloadFile({\r\n                token: token as string,\r\n                filename: fileData.filename\r\n            });\r\n\r\n            const file:Blob = response.data;\r\n\r\n            let link = document.createElement('a');\r\n            link.download = fileData.filename;\r\n\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n\r\n            reader.onload = function() {\r\n                link.href = reader.result as string;\r\n                link.click();\r\n            };\r\n        }\r\n        catch (error) {\r\n            const errorInfo: ApiError = error.response.data;\r\n\r\n            if(errorInfo.code === \"EXPIRATION_OUT\") {\r\n                await dispatch(refreshTokenThunk(token));\r\n                await onSelectFile(fileData);\r\n\r\n                return;\r\n            }\r\n\r\n            console.error(errorInfo.message);\r\n        }\r\n    };\r\n\r\n    const onUploadFiles = async (fileList: null | FileList) => {\r\n        if(fileList) {\r\n            const file = fileList[0];\r\n\r\n            if(file.size > 1024*1024*20) {\r\n                showError(\"Максимальный размер файла 20Мб\");\r\n                return;\r\n            }\r\n\r\n            setAttachedFile(file);\r\n        }\r\n    };\r\n\r\n    const onChangeCommentValue = (value: string) => {\r\n        setCommentValue(value);\r\n    };\r\n\r\n    const onSendFile = async () => {\r\n        if(!attachedFile) {\r\n            showError(\"Прикрепите файл!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formData = new FormData();\r\n\r\n            formData.append(\"token\", Store.getState().auth.token as string);\r\n            formData.append(\"comment\", commentValue);\r\n            formData.append(\"file\", attachedFile);\r\n\r\n            await AuthApi.uploadFile(formData);\r\n            await getFilesList();\r\n\r\n            setAttachedFile(null);\r\n            setCommentValue(\"\");\r\n        }\r\n        catch(error) {\r\n            const errorInfo: ApiError = error.response.data;\r\n\r\n            if(errorInfo.code === \"EXPIRATION_OUT\") {\r\n                await dispatch(refreshTokenThunk(token));\r\n                await onSendFile();\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(!token) {\r\n            const sessionToken = localStorage.getItem(\"sessionToken\");\r\n            if(sessionToken) {\r\n                AuthApi.checkSession({\r\n                    token: sessionToken\r\n                })\r\n                .then(() => {\r\n                    dispatch(Auth.Actions.saveToken(sessionToken));\r\n                })\r\n                .catch(() => {\r\n                    localStorage.removeItem(\"sessionToken\");\r\n                    history.push(routes.login);\r\n                });\r\n            }\r\n            else {\r\n                history.push(routes.login);\r\n            }\r\n        }\r\n    }, [history, token, dispatch]);\r\n\r\n    useEffect(() => {\r\n        getFilesList();\r\n    }, [getFilesList])\r\n\r\n    return (\r\n        <div className={styles.screen}>\r\n            <FilesList\r\n                data={filesList}\r\n                onRowClick={onSelectFile}\r\n                isLoading={isFilesListLoading}\r\n            />\r\n            <UploadFileButton\r\n                onUploadFiles={onUploadFiles}\r\n                attachedFile={attachedFile}\r\n            >\r\n                Прикрепить файл\r\n            </UploadFileButton>\r\n            <textarea\r\n                className={styles.commentField}\r\n                value={commentValue}\r\n                onChange={(event) => onChangeCommentValue(event.currentTarget.value)}\r\n                placeholder={\"Комментарий\"}\r\n            />\r\n            <Button\r\n                onClick={onSendFile}\r\n                className={styles.sendFileButton}\r\n            >\r\n                Загрузить\r\n            </Button>\r\n            {error.value && <span className={styles.error}>{error.value}</span>}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\nimport NotFoundPage from \"./pages/NotFoundPage\";\r\nimport {routes} from \"./routes\";\r\nimport {MainPage} from \"./pages/MainPage/MainPage\";\r\n\r\nconst Router:React.FC = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path={routes.root} component={MainPage} exact={true} />\r\n                <Route path={[routes.login, routes.registration]} component={AuthPage} exact={true} />\r\n                <Route render={() => <Redirect to={routes.notFound} />} />\r\n            </Switch>\r\n            <Route path={routes.notFound} exact={true} component={NotFoundPage} />\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react';\nimport './App.scss';\nimport Router from \"./components/Router\";\n\nimport {Provider as ReduxProvider} from 'react-redux';\nimport {Store} from './store/Store';\n\nexport const Global = {\n    defaultTitle: \"File Storage\"\n};\n\nfunction App() {\n    return (\n        <ReduxProvider store={Store}>\n            <Router/>\n        </ReduxProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'reset-css';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilesList_container__3J2z0\",\"list\":\"FilesList_list__3eNp2\",\"mainTitle\":\"FilesList_mainTitle__1AP2Q\",\"mainRow\":\"FilesList_mainRow__3Azsr\",\"row\":\"FilesList_row__cX2gy\",\"filename\":\"FilesList_filename__15J-E\",\"timestamp\":\"FilesList_timestamp__OKYpj\",\"comment\":\"FilesList_comment__Ztbqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"MainPage_screen__3BPIA\",\"sendFileButton\":\"MainPage_sendFileButton__2bAI1\",\"error\":\"MainPage_error__15Fi8\",\"commentField\":\"MainPage_commentField__2Cghg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UploadFileButton_container__3iEso\",\"label\":\"UploadFileButton_label__1t-kJ\",\"attachedFileName\":\"UploadFileButton_attachedFileName__Upg7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__21ptB\",\"success\":\"Button_success__3epyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"Screen_screen__NskMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthPage_container__31Gzp\"};"],"sourceRoot":""}